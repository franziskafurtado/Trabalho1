/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package trabalho1_bd;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.*;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
/**
 *
 * @author vitor
 */
public class ConnectionGUIForm extends javax.swing.JFrame  {
    private static String _csvExportDir = System.getProperty("user.dir")+"\\exportedCSV.csv";
    public Connection con;
    
    public ConnectionGUIForm() {
        initComponents();
    }
    public ConnectionGUIForm(Connection con) {
        this.con = con;
        initComponents();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        executeButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        sqlCommandTextArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jScrollPane5 = new javax.swing.JScrollPane();
        sqlResultTable = new javax.swing.JTable();
        exportCsvButton = new javax.swing.JButton();
        exportJsonButton = new javax.swing.JButton();
        returnNumberLimit = new javax.swing.JTextField();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        executeButton.setText("Executar");
        executeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                executeButtonActionPerformed(evt);
            }
        });

        sqlCommandTextArea.setColumns(20);
        sqlCommandTextArea.setRows(5);
        jScrollPane1.setViewportView(sqlCommandTextArea);

        jScrollPane2.setViewportView(jTree1);

        sqlResultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane5.setViewportView(sqlResultTable);

        exportCsvButton.setText("Exportar CSV");
        exportCsvButton.setEnabled(false);
        exportCsvButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportCsvButtonActionPerformed(evt);
            }
        });

        exportJsonButton.setText("Exportar Json");
        exportJsonButton.setEnabled(false);
        exportJsonButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportJsonButtonActionPerformed(evt);
            }
        });

        returnNumberLimit.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                returnNumberLimitInputMethodTextChanged(evt);
            }
        });
        returnNumberLimit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnNumberLimitActionPerformed(evt);
            }
        });
        returnNumberLimit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                returnNumberLimitKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(executeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(exportJsonButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(exportCsvButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(returnNumberLimit, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(129, 129, 129))
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 1053, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(executeButton)
                            .addComponent(exportCsvButton)
                            .addComponent(exportJsonButton)
                            .addComponent(returnNumberLimit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void executeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_executeButtonActionPerformed
        try {
            exportCsvButton.setEnabled(false);
            exportJsonButton.setEnabled(false);
            
            Statement stmt = this.con.createStatement();
            ResultSet rs = stmt.executeQuery(sqlCommandTextArea.getText());
            ArrayList<String> resultColumns = new ArrayList<>();
            
            DefaultTableModel dtm = new DefaultTableModel(0, 0);
            
            if (rs.next()) {
               ResultSetMetaData rsmd = rs.getMetaData();               
               
               ArrayList<String> resultLine = new ArrayList<String>();
               
               for(int i=1; i <= rsmd.getColumnCount(); i++){
                  resultColumns.add(rsmd.getColumnName(i));
                  resultLine.add(rs.getString(i));
               }
               
                dtm.setColumnIdentifiers(resultColumns.toArray());
                sqlResultTable.setModel(dtm);
                
                dtm.addRow(resultLine.toArray());
                
              
               while(rs.next()){
                    resultLine = new ArrayList<String>();
                    for(int i=1; i <= rsmd.getColumnCount(); i++){
                      resultColumns.add(rsmd.getColumnName(i));
                      resultLine.add(rs.getString(i));
                    }
                    dtm.addRow(resultLine.toArray());
               }
               exportCsvButton.setEnabled(true);
            }
        } catch (SQLException sql1) {
            System.out.println("Erro BD: " + sql1);
        }
    }//GEN-LAST:event_executeButtonActionPerformed

    private void exportCsvButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportCsvButtonActionPerformed
        try {
            System.out.println(_csvExportDir);
            TableModel model = sqlResultTable.getModel();
            FileWriter csv = new FileWriter(new File(_csvExportDir));

            for (int i = 0; i < model.getColumnCount(); i++) {
                csv.write(model.getColumnName(i) + ",");
            }

            csv.write("\n");

            for (int i = 0; i < model.getRowCount(); i++) {
                for (int j = 0; j < model.getColumnCount(); j++) {
                    csv.write(model.getValueAt(i, j).toString() + ",");
                }
                csv.write("\n");
            }

            csv.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_exportCsvButtonActionPerformed

    private void exportJsonButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportJsonButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_exportJsonButtonActionPerformed

    private void returnNumberLimitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnNumberLimitActionPerformed

    }//GEN-LAST:event_returnNumberLimitActionPerformed

    private void returnNumberLimitKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_returnNumberLimitKeyPressed

    }//GEN-LAST:event_returnNumberLimitKeyPressed

    private void returnNumberLimitInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_returnNumberLimitInputMethodTextChanged
         try{
            System.out.println("Change");
            Integer.valueOf(returnNumberLimit.getText());
        }
        catch(Exception ex){
            returnNumberLimit.setText("");

            returnNumberLimit.setText("1000");
        }
    }//GEN-LAST:event_returnNumberLimitInputMethodTextChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConnectionGUIForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConnectionGUIForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConnectionGUIForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConnectionGUIForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConnectionGUIForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton executeButton;
    private javax.swing.JButton exportCsvButton;
    private javax.swing.JButton exportJsonButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTree jTree1;
    private javax.swing.JTextField returnNumberLimit;
    private javax.swing.JTextArea sqlCommandTextArea;
    private javax.swing.JTable sqlResultTable;
    // End of variables declaration//GEN-END:variables
}
